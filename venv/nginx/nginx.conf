events {
    worker_connections 1024;
}

http {
    # Define upstream services with fail-timeout and retries
    upstream user_service {
        server user_service:8000 max_fails=3 fail_timeout=30s;
    }

    upstream room_service {
        server room_service:8001 max_fails=3 fail_timeout=30s;
    }

    upstream booking_service {
        server booking_service:8002 max_fails=3 fail_timeout=30s;
    }

    server {
        listen 80;
        server_name localhost;

        # Add health check endpoint
        location /health {
            return 200 'OK';
            add_header Content-Type text/plain;
        }

        # User Service Proxy
        location /api/users/ {
            proxy_pass http://user_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # Add proxy timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            
            # Enable keepalive
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # Room Service Proxy
        location /api/rooms/ {
            proxy_pass http://room_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # Booking Service Proxy
        location /api/bookings/ {
            proxy_pass http://booking_service/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # Error handling
        error_page 502 /502.html;
        location = /502.html {
            internal;
            return 502 '{"error": "Bad Gateway", "message": "The upstream service is unavailable"}';
            add_header Content-Type application/json;
        }
    }
}